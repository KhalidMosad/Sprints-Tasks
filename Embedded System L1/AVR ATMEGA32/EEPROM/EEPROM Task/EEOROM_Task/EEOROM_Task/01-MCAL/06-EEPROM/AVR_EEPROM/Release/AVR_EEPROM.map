Archive member included because of file (symbol)

f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_program.o
LOAD ./EEPROM_program.o
LOAD ./I2C_program.o
LOAD ./main.o
LOAD f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x576
 *(.vectors)
 .vectors       0x00000000       0x54 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000068                __vector_1
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
 .text          0x0000006c        0x0 ./DIO_program.o
 .text          0x0000006c        0x0 ./EEPROM_program.o
 .text          0x0000006c        0x0 ./I2C_program.o
 .text          0x0000006c        0x0 ./main.o
 .text          0x0000006c        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_VidSetPinDirection
                0x0000006c       0xe6 ./DIO_program.o
                0x0000006c                DIO_VidSetPinDirection
 .text.DIO_VidSetPinValue
                0x00000152       0xe6 ./DIO_program.o
                0x00000152                DIO_VidSetPinValue
 .text.DIO_VidGetPinValue
                0x00000238       0x40 ./DIO_program.o
                0x00000238                DIO_VidGetPinValue
 .text.DIO_VidSetPortDirection
                0x00000278       0x54 ./DIO_program.o
                0x00000278                DIO_VidSetPortDirection
 .text.DIO_VidSetPortValue
                0x000002cc       0x22 ./DIO_program.o
                0x000002cc                DIO_VidSetPortValue
 .text.DIO_VidTogglePin
                0x000002ee       0x6a ./DIO_program.o
                0x000002ee                DIO_VidTogglePin
 .text.DIO_u8GetPortValue
                0x00000358       0x24 ./DIO_program.o
                0x00000358                DIO_u8GetPortValue
 .text.EEPROM_u8ReadDataByte
                0x0000037c        0x6 ./EEPROM_program.o
                0x0000037c                EEPROM_u8ReadDataByte
 .text.EEPROM_VoidWriteDataByte
                0x00000382        0x6 ./EEPROM_program.o
                0x00000382                EEPROM_VoidWriteDataByte
 .text.EEPROM_VoidInit
                0x00000388        0x6 ./EEPROM_program.o
                0x00000388                EEPROM_VoidInit
 .text.TWI_VoidMasterInit
                0x0000038e       0x1c ./I2C_program.o
                0x0000038e                TWI_VoidMasterInit
 .text.TWI_VoidSlaveInit
                0x000003aa       0x12 ./I2C_program.o
                0x000003aa                TWI_VoidSlaveInit
 .text.TWI_VoidStartCondition
                0x000003bc        0xe ./I2C_program.o
                0x000003bc                TWI_VoidStartCondition
 .text.TWI_VoidRepeatedStartCondition
                0x000003ca       0x12 ./I2C_program.o
                0x000003ca                TWI_VoidRepeatedStartCondition
 .text.TWI_VoidMaster_Send_Slave_Address_With_Write
                0x000003dc       0x28 ./I2C_program.o
                0x000003dc                TWI_VoidMaster_Send_Slave_Address_With_Write
 .text.TWI_VoidMaster_Reading_Byte_From_Slave
                0x00000404       0x1a ./I2C_program.o
                0x00000404                TWI_VoidMaster_Reading_Byte_From_Slave
 .text.TWI_U8ReadACK
                0x0000041e       0x16 ./I2C_program.o
                0x0000041e                TWI_U8ReadACK
 .text.TWI_U8ReadNACK
                0x00000434       0x10 ./I2C_program.o
                0x00000434                TWI_U8ReadNACK
 .text.TWI_VoidMaster_Write_Byte_To_Slave
                0x00000444       0x16 ./I2C_program.o
                0x00000444                TWI_VoidMaster_Write_Byte_To_Slave
 .text.TWI_VoidMaster1_Write_Byte_To_Slave
                0x0000045a       0x4a ./I2C_program.o
                0x0000045a                TWI_VoidMaster1_Write_Byte_To_Slave
 .text.TWI_U8GetStatus
                0x000004a4        0x4 ./I2C_program.o
                0x000004a4                TWI_U8GetStatus
 .text.TWI_VoidStopCondition
                0x000004a8        0xe ./I2C_program.o
                0x000004a8                TWI_VoidStopCondition
 .text.TWI_VoidMaster1_Reading_Byte_From_Slave
                0x000004b6       0x7c ./I2C_program.o
                0x000004b6                TWI_VoidMaster1_Reading_Byte_From_Slave
 .text.TWI_VoidI2cListen
                0x00000532        0x8 ./I2C_program.o
                0x00000532                TWI_VoidI2cListen
 .text.main     0x0000053a       0x38 ./main.o
                0x0000053a                main
 .text.libgcc   0x00000572        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000572                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000572        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000572                exit
                0x00000572                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000572        0x4 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000576                _etext = .

.data           0x00800060        0x0 load address 0x00000576
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_program.o
 .data          0x00800060        0x0 ./EEPROM_program.o
 .data          0x00800060        0x0 ./I2C_program.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./DIO_program.o
 .bss           0x00800060        0x0 ./EEPROM_program.o
 .bss           0x00800060        0x0 ./I2C_program.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 f:/iti/imt tools/sdk/sdk/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x00000576                __data_load_start = LOADADDR (.data)
                0x00000576                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(AVR_EEPROM.elf elf32-avr)
LOAD linker stubs
